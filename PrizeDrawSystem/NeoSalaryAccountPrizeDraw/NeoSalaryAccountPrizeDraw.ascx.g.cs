//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PrizeDrawSystem.NeoSalaryAccountPrizeDraw {
    using System.Web.UI.WebControls.Expressions;
    using System.Web.UI.HtmlControls;
    using System.Collections;
    using System.Text;
    using System.Web.UI;
    using System.Collections.Generic;
    using System.Linq;
    using System.Xml.Linq;
    using Microsoft.SharePoint.WebPartPages;
    using System.Web.SessionState;
    using System.Configuration;
    using Microsoft.SharePoint;
    using System.Web;
    using System.Web.DynamicData;
    using System.Web.Caching;
    using System.Web.Profile;
    using System.ComponentModel.DataAnnotations;
    using System.Web.UI.WebControls;
    using System.Web.Security;
    using System;
    using Microsoft.SharePoint.Utilities;
    using System.Text.RegularExpressions;
    using System.Collections.Specialized;
    using System.Web.UI.WebControls.WebParts;
    using Microsoft.SharePoint.WebControls;
    using System.CodeDom.Compiler;
    
    
    public partial class NeoSalaryAccountPrizeDraw {
        
        [GeneratedCodeAttribute("Microsoft.VisualStudio.SharePoint.ProjectExtensions.CodeGenerators.SharePointWebPartCodeGenerator", "12.0.0.0")]
        public static implicit operator global::System.Web.UI.TemplateControl(NeoSalaryAccountPrizeDraw target) 
        {
            return target == null ? null : target.TemplateControl;
        }
        
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Never)]
        [GeneratedCodeAttribute("Microsoft.VisualStudio.SharePoint.ProjectExtensions.CodeGenerators.SharePointWebP" +
            "artCodeGenerator", "12.0.0.0")]
        private void @__BuildControlTree(global::PrizeDrawSystem.NeoSalaryAccountPrizeDraw.NeoSalaryAccountPrizeDraw @__ctrl) {
            @__ctrl.SetRenderMethodDelegate(new System.Web.UI.RenderMethod(this.@__Render__control1));
        }
        
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Never)]
        [GeneratedCodeAttribute("Microsoft.VisualStudio.SharePoint.ProjectExtensions.CodeGenerators.SharePointWebP" +
            "artCodeGenerator", "12.0.0.0")]
        private void @__Render__control1(System.Web.UI.HtmlTextWriter @__w, System.Web.UI.Control parameterContainer) {
            @__w.Write("\r\n\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <h2 class=\"text-cen" +
                    "ter mt-5\">\r\n            ");
    @__w.Write(DrawType );

            @__w.Write(" Draw (New Salary Account) \r\n            <br />\r\n            السحب لمرة واحدة (ال" +
                    "سحب على الفائزين في عرض تحويل الراتب)\r\n        </h2>\r\n        <hr class=\"mb-5\">\r" +
                    "\n\r\n        <div class=\"row\" id=\"loadingGifRow\">\r\n\r\n            <div class=\"col-m" +
                    "d-3\">\r\n            </div>\r\n\r\n            <div class=\"col-md-6 text-center\">\r\n   " +
                    "             <img src=\"/PublishingImages/Icons/loading.gif\" id=\"loadingGif\" styl" +
                    "e=\"display: none; width: 80%;\" />\r\n                <div class=\"startDrawDiv\">\r\n " +
                    "                   <button class=\"startDrawBtn\" onclick=\"return false;\">Start Dr" +
                    "aw بدء السحب</button>\r\n                </div>\r\n            </div>\r\n\r\n           " +
                    " <div class=\"col-md-3\">\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n        <div " +
                    "id=\"winnersDiv\" style=\"display: none;\">\r\n            <h2 class=\"winnersHeading\">" +
                    "Winners\r\n            </h2>\r\n            <table id=\"winnersTbl\" class=\"display\" s" +
                    "tyle=\"width: 100%;\">\r\n                <thead>\r\n                    <tr>\r\n       " +
                    "                 <th>Customer Name\r\n                            <br />\r\n        " +
                    "                    إسم العميل</th>\r\n                        <th>Account No\r\n   " +
                    "                         <br />\r\n                            رقم الحساب</th>\r\n  " +
                    "                      <th>Account Type</th>\r\n                        <th>Branch " +
                    "Code\r\n                            <br />\r\n                            رمز الفرع<" +
                    "/th>\r\n                        <th>Account Opening Date</th>\r\n                   " +
                    "     <th>Last Salary Transfer Date</th>\r\n                        <th>Winning Amo" +
                    "unt\r\n                            <br />\r\n                            قيمة الجائز" +
                    "ة</th>\r\n                    </tr>\r\n                </thead>\r\n            </table" +
                    ">\r\n            <div class=\"row\" style=\"margin-top: 25px; display: none;\" id=\"sav" +
                    "eResultsRow\">\r\n                <div class=\"col text-center\">\r\n                  " +
                    "  <button class=\"btn btn-primary\" onclick=\"SaveWinnerResults(); return false;\">S" +
                    "ave Results</button>\r\n                </div>\r\n            </div>\r\n        </div>" +
                    "\r\n\r\n    </div>\r\n</div>\r\n\r\n<script type=\"text/javascript\">\r\n\r\n    var maxWinners " +
                    "= 0;\r\n    var winners = [];\r\n\r\n    function LoadConfigurations() {\r\n\r\n        $(" +
                    "\'.ajax-loader\').css(\"visibility\", \"visible\");\r\n        var methodUrl = [location" +
                    ".protocol, \'//\', location.host].join(\'\') + \'/_layouts/15/PrizeDrawSystem/WebAPI." +
                    "aspx/GetDrawButtonStatus\';\r\n        $.ajax({\r\n            type: \"POST\",\r\n       " +
                    "     url: methodUrl,\r\n            data: JSON.stringify({ drawCategory: \"New Sala" +
                    "ry Account\" }),\r\n            contentType: \"application/json; charset=utf-8\",\r\n  " +
                    "          dataType: \"json\",\r\n            success: function (result) {\r\n\r\n       " +
                    "         $(\'.ajax-loader\').css(\"visibility\", \"hidden\");\r\n                if (res" +
                    "ult != null && result.d != null) {\r\n\r\n                    if (result.d == false)" +
                    " {\r\n\r\n                        var html = \'\';\r\n                        html += \'<" +
                    "div class=\"toast\" data-autohide=\"false\" style=\"max-width: 100%;\">\';\r\n           " +
                    "             html += \'<div class=\"toast-header\">\';\r\n                        html" +
                    " += \'<strong class=\"mr-auto text-primary\" id=\"msgHdr\">Message</strong>\';\r\n      " +
                    "                  html += \'<button type=\"button\" class=\"ml-2 mb-1 close\" data-di" +
                    "smiss=\"toast\">&times;</button>\';\r\n                        html += \'</div>\';\r\n   " +
                    "                     html += \'<div class=\"toast-body\" id=\"msgBody\">\';\r\n         " +
                    "               html += \'Please Import Data to start draw\';\r\n                    " +
                    "    html += \'</div>\';\r\n                        html += \'</div>\';\r\n\r\n            " +
                    "            $(\'.startDrawDiv\').html(html);\r\n                        $(\'.toast\')." +
                    "toast(\'show\');\r\n                    }\r\n                    else {\r\n             " +
                    "           LoadDrawConfigurations();\r\n                    }\r\n                }\r\n" +
                    "\r\n            },\r\n            error: function (jqXHR, textStatus, errorThrown) {" +
                    "\r\n                console.log(\'Error occured\');\r\n                $(\'.ajax-loader" +
                    "\').css(\"visibility\", \"hidden\");\r\n                if (jqXHR.status == 500) {\r\n   " +
                    "                 console.log(\'Internal error: \' + jqXHR.responseText);\r\n        " +
                    "        } else {\r\n                    console.log(\'Unexpected error.\');\r\n       " +
                    "         }\r\n            }\r\n        });\r\n    }\r\n\r\n    function LoadDrawConfigurat" +
                    "ions() {\r\n\r\n        $(\'.ajax-loader\').css(\"visibility\", \"visible\");\r\n\r\n        v" +
                    "ar methodUrl = [location.protocol, \'//\', location.host].join(\'\') + \'/_layouts/15" +
                    "/PrizeDrawSystem/WebAPI.aspx/GetMaxNewSalaryAccountWinners\';\r\n        $.ajax({\r\n" +
                    "            type: \"POST\",\r\n            url: methodUrl,\r\n            data: JSON.s" +
                    "tringify({}),\r\n            contentType: \"application/json; charset=utf-8\",\r\n    " +
                    "        dataType: \"json\",\r\n            success: function (result) {\r\n           " +
                    "     $(\'.ajax-loader\').css(\"visibility\", \"hidden\");\r\n                if (result " +
                    "!= null && result.d != null) {\r\n\r\n                    maxWinners = result.d;\r\n  " +
                    "              }\r\n\r\n            },\r\n            error: function (jqXHR, textStatu" +
                    "s, errorThrown) {\r\n                console.log(\'Error occured\');\r\n              " +
                    "  $(\'.ajax-loader\').css(\"visibility\", \"hidden\");\r\n                if (jqXHR.stat" +
                    "us == 500) {\r\n                    console.log(\'Internal error: \' + jqXHR.respons" +
                    "eText);\r\n                } else {\r\n                    console.log(\'Unexpected e" +
                    "rror.\');\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    function D" +
                    "eleteAndArchiveData() {\r\n\r\n        var methodUrl = [location.protocol, \'//\', loc" +
                    "ation.host].join(\'\') + \'/_layouts/15/PrizeDrawSystem/WebAPI.aspx/ArchiveAndDelet" +
                    "eNewSalaryAccountData\';\r\n        $.ajax({\r\n            type: \"POST\",\r\n          " +
                    "  url: methodUrl,\r\n            data: JSON.stringify({}),\r\n            contentTyp" +
                    "e: \"application/json; charset=utf-8\",\r\n            dataType: \"json\",\r\n          " +
                    "  success: function (result) {\r\n\r\n            },\r\n            error: function (j" +
                    "qXHR, textStatus, errorThrown) {\r\n                console.log(\'Error occured\');\r" +
                    "\n                if (jqXHR.status == 500) {\r\n                    console.log(\'In" +
                    "ternal error: \' + jqXHR.responseText);\r\n                } else {\r\n              " +
                    "      console.log(\'Unexpected error.\');\r\n                }\r\n            }\r\n     " +
                    "   });\r\n    }\r\n\r\n    function SaveWinnerResults() {\r\n\r\n        if (winners != nu" +
                    "ll && winners.length > 0) {\r\n\r\n            for (var i = 0; i < winners.length; i" +
                    "++) {\r\n\r\n                winners[i].AccountOpeningDate = new Date(parseInt(winne" +
                    "rs[i].AccountOpeningDate.substr(6))).toJSON();\r\n                winners[i].LastS" +
                    "alaryTransferDate = new Date(parseInt(winners[i].LastSalaryTransferDate.substr(6" +
                    "))).toJSON();\r\n                delete winners[i].__type;\r\n            }\r\n\r\n     " +
                    "       $(\'.ajax-loader\').css(\"visibility\", \"visible\");\r\n\r\n            var method" +
                    "Url = [location.protocol, \'//\', location.host].join(\'\') + \'/_layouts/15/PrizeDra" +
                    "wSystem/WebAPI.aspx/SaveNewSalaryAccountWinners\';\r\n            $.ajax({\r\n       " +
                    "         type: \"POST\",\r\n                url: methodUrl,\r\n                data: J" +
                    "SON.stringify({ drawType: \"");
                                          @__w.Write(DrawType);

            @__w.Write("\", allWinners: winners }),\r\n                contentType: \"application/json; chars" +
                    "et=utf-8\",\r\n                dataType: \"json\",\r\n                success: function" +
                    " (result) {\r\n                    $(\'.ajax-loader\').css(\"visibility\", \"hidden\");\r" +
                    "\n                    console.log(result);\r\n                    if (result != nul" +
                    "l && result.d != null) {\r\n\r\n                        DeleteAndArchiveData();\r\n\r\n " +
                    "                       var html = \'\';\r\n                        html += \'<div cla" +
                    "ss=\"toast\" data-autohide=\"false\" style=\"max-width: 100%;\">\';\r\n                  " +
                    "      html += \'<div class=\"toast-header\">\';\r\n                        html += \'<s" +
                    "trong class=\"mr-auto text-primary\" id=\"msgHdr\">Message</strong>\';\r\n             " +
                    "           html += \'<button type=\"button\" class=\"ml-2 mb-1 close\" data-dismiss=\"" +
                    "toast\">&times;</button>\';\r\n                        html += \'</div>\';\r\n          " +
                    "              html += \'<div class=\"toast-body\" id=\"msgBody\">\';\r\n                " +
                    "        html += \'Winners data is saved successfully\';\r\n                        h" +
                    "tml += \'</div>\';\r\n                        html += \'</div>\';\r\n\r\n                 " +
                    "       $(\'.startDrawDiv\').html(html);\r\n                        $(\'.toast\').toast" +
                    "(\'show\');\r\n                        $(\'#loadingGifRow\').show();\r\n                " +
                    "        $(\'#winnersDiv\').html(\'\');\r\n                    }\r\n\r\n                },\r" +
                    "\n                error: function (jqXHR, textStatus, errorThrown) {\r\n           " +
                    "         console.log(\'Error occured\');\r\n                    $(\'.ajax-loader\').cs" +
                    "s(\"visibility\", \"hidden\");\r\n                    if (jqXHR.status == 500) {\r\n    " +
                    "                    console.log(\'Internal error: \' + jqXHR.responseText);\r\n     " +
                    "               } else {\r\n                        console.log(\'Unexpected error.\'" +
                    ");\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r" +
                    "\n\r\n    $(function () {\r\n\r\n\r\n        LoadConfigurations();\r\n\r\n        $(\'.startDr" +
                    "awBtn\').click(function () {\r\n\r\n            $(\'.startDrawBtn\').hide();\r\n         " +
                    "   $(\"#loadingGif\").fadeIn(2000);\r\n\r\n\r\n            var methodUrl = [location.pro" +
                    "tocol, \'//\', location.host].join(\'\') + \'/_layouts/15/PrizeDrawSystem/WebAPI.aspx" +
                    "/\';\r\n\r\n            if (maxWinners > 5) {\r\n\r\n                methodUrl += \"GetNew" +
                    "SalaryAccountAllWinners\";\r\n\r\n                $(\'.ajax-loader\').css(\"visibility\"," +
                    " \"visible\");\r\n\r\n                $.ajax({\r\n                    type: \"POST\",\r\n   " +
                    "                 url: methodUrl,\r\n                    data: JSON.stringify({ dra" +
                    "wType: \"");
                                              @__w.Write(DrawType);

            @__w.Write("\" }),\r\n                    contentType: \"application/json; charset=utf-8\",\r\n     " +
                    "               dataType: \"json\",\r\n                    success: function (result)" +
                    " {\r\n\r\n                        $(\'.ajax-loader\').css(\"visibility\", \"hidden\");\r\n  " +
                    "                      if (result != null && result.d != null && result.d.length " +
                    "> 0) {\r\n\r\n                            winners = result.d;\r\n\r\n                   " +
                    "         setTimeout(function () {\r\n\r\n                                $(\'#winners" +
                    "Tbl\').DataTable({\r\n                                    data: winners,\r\n         " +
                    "                           \"bSort\": false,\r\n                                    " +
                    "columns: [\r\n                                        { \"data\": \"CustomerName\" },\r" +
                    "\n                                        { \"data\": \"AccountNumber\" },\r\n         " +
                    "                               { \"data\": \"AccountType\" },\r\n                     " +
                    "                   { \"data\": \"BranchCode\" },\r\n                                  " +
                    "      { \"data\": \"AccountOpeningDateStr\" },\r\n                                    " +
                    "    { \"data\": \"LastSalaryTransferDateStr\" },\r\n                                  " +
                    "      { \"data\": \"WinningAmount\" }\r\n                                    ]\r\n      " +
                    "                          });\r\n\r\n                                $(\"#loadingGif\"" +
                    ").fadeOut(2000);\r\n                                $(\'#loadingGifRow\').hide();\r\n " +
                    "                               $(\"#winnersDiv\").fadeIn(2000);\r\n                 " +
                    "               $(\"#saveResultsRow\").fadeIn(2000);\r\n\r\n                           " +
                    " }, 3000);\r\n\r\n\r\n\r\n                        }\r\n\r\n                    },\r\n         " +
                    "           error: function (jqXHR, textStatus, errorThrown) {\r\n                 " +
                    "       console.log(\'Error occured\');\r\n                        $(\'.ajax-loader\')." +
                    "css(\"visibility\", \"hidden\");\r\n                        if (jqXHR.status == 500) {" +
                    "\r\n                            console.log(\'Internal error: \' + jqXHR.responseTex" +
                    "t);\r\n                        } else {\r\n                            console.log(\'" +
                    "Unexpected error.\');\r\n                        }\r\n                    }\r\n        " +
                    "        });\r\n            }\r\n            else {\r\n\r\n                methodUrl += \"" +
                    "GetPOSMachineSingleWinner\";\r\n\r\n                if (winners != null && winners.le" +
                    "ngth > 0) {\r\n\r\n                    for (var i = 0; i < winners.length; i++) {\r\n\r" +
                    "\n                        winners[i].AccountOpeningDate = new Date(parseInt(winne" +
                    "rs[i].AccountOpeningDate.substr(6))).toJSON();\r\n                        winners[" +
                    "i].LastSalaryTransferDate = new Date(parseInt(winners[i].LastSalaryTransferDate." +
                    "substr(6))).toJSON();\r\n                        delete winners[i].__type;\r\n      " +
                    "              }\r\n                }\r\n\r\n                $(\'.ajax-loader\').css(\"vis" +
                    "ibility\", \"visible\");\r\n\r\n                $.ajax({\r\n                    type: \"PO" +
                    "ST\",\r\n                    url: methodUrl,\r\n                    data: JSON.string" +
                    "ify({ drawType: \"");
                                              @__w.Write(DrawType);

            @__w.Write("\", lastWinners: winners }),\r\n                    contentType: \"application/json; " +
                    "charset=utf-8\",\r\n                    dataType: \"json\",\r\n                    succ" +
                    "ess: function (result) {\r\n\r\n                        $(\'.ajax-loader\').css(\"visib" +
                    "ility\", \"hidden\");\r\n                        if (result != null && result.d != nu" +
                    "ll && result.d.length > 0) {\r\n\r\n                            //result.d.forEach(f" +
                    "unction (item) {\r\n\r\n                            //    winners.push(item);\r\n     " +
                    "                       //});\r\n\r\n                            winners = result.d;\r" +
                    "\n\r\n                            setTimeout(function () {\r\n\r\n                     " +
                    "           var table = $(\'#winnersTbl\').DataTable();\r\n                          " +
                    "      table.destroy();\r\n                                $(\'#winnersTbl\').DataTab" +
                    "le({\r\n                                    data: winners,\r\n                      " +
                    "              \"bSort\": false,\r\n                                    columns: [\r\n " +
                    "                                       { \"data\": \"CustomerName\" },\r\n            " +
                    "                            { \"data\": \"AccountNumber\" },\r\n                      " +
                    "                  { \"data\": \"AccountType\" },\r\n                                  " +
                    "      { \"data\": \"BranchCode\" },\r\n                                        { \"data" +
                    "\": \"AccountOpeningDateStr\" },\r\n                                        { \"data\":" +
                    " \"LastSalaryTransferDateStr\" },\r\n                                        { \"data" +
                    "\": \"WinningAmount\" }\r\n                                    ]\r\n                   " +
                    "             });\r\n\r\n                                $(\"#loadingGif\").fadeOut(200" +
                    "0);\r\n                                $(\"#winnersDiv\").fadeIn(2000);\r\n\r\n         " +
                    "                       maxWinners--;\r\n\r\n                                if (maxW" +
                    "inners == 0) {\r\n\r\n                                    $(\'#loadingGifRow\').hide()" +
                    ";\r\n                                    $(\"#saveResultsRow\").fadeIn(2000);\r\n     " +
                    "                           }\r\n                                else {\r\n          " +
                    "                          $(\'.startDrawBtn\').fadeIn(2000);\r\n                    " +
                    "            }\r\n\r\n                            }, 3000);\r\n\r\n\r\n\r\n                  " +
                    "      }\r\n\r\n                    },\r\n                    error: function (jqXHR, t" +
                    "extStatus, errorThrown) {\r\n                        console.log(\'Error occured\');" +
                    "\r\n                        $(\'.ajax-loader\').css(\"visibility\", \"hidden\");\r\n      " +
                    "                  if (jqXHR.status == 500) {\r\n                            consol" +
                    "e.log(\'Internal error: \' + jqXHR.responseText);\r\n                        } else " +
                    "{\r\n                            console.log(\'Unexpected error.\');\r\n              " +
                    "          }\r\n                    }\r\n                });\r\n            }\r\n\r\n\r\n    " +
                    "    });\r\n\r\n\r\n\r\n    });\r\n\r\n</script>\r\n\r\n");
        }
        
        [GeneratedCodeAttribute("Microsoft.VisualStudio.SharePoint.ProjectExtensions.CodeGenerators.SharePointWebP" +
            "artCodeGenerator", "12.0.0.0")]
        private void InitializeControl() {
            this.@__BuildControlTree(this);
            this.Load += new global::System.EventHandler(this.Page_Load);
        }
        
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Never)]
        [GeneratedCodeAttribute("Microsoft.VisualStudio.SharePoint.ProjectExtensions.CodeGenerators.SharePointWebP" +
            "artCodeGenerator", "12.0.0.0")]
        protected virtual object Eval(string expression) {
            return global::System.Web.UI.DataBinder.Eval(this.Page.GetDataItem(), expression);
        }
        
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Never)]
        [GeneratedCodeAttribute("Microsoft.VisualStudio.SharePoint.ProjectExtensions.CodeGenerators.SharePointWebP" +
            "artCodeGenerator", "12.0.0.0")]
        protected virtual string Eval(string expression, string format) {
            return global::System.Web.UI.DataBinder.Eval(this.Page.GetDataItem(), expression, format);
        }
    }
}
